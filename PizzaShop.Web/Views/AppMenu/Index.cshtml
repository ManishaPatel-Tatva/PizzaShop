@using PizzaShop.Entity.Models
@using PizzaShop.Entity.ViewModels
@model AppMenuViewModel

@{
    ViewData["Title"] = "Menu";
    Layout = "_OrderAppLayout";
}

<!-- Sidebar starts-->
<div class="menu-sidebar" id="menu-sidebar">
    <!-- Categories heading tab starts-->
    <div class="bg-white">
        <div class="fs-5 fw-semibold m-2 ps-2 text-center text-md-start">Category</div>
        <ul class="nav nav-pills app-categories d-flex flex-row flex-md-column flex-nowrap overflow-auto" id="pills-tab"
            role="tablist">

            <li class="nav-item mb-2 my-md-0" role="presentation">
                <button class="btn-category nav-link p-2 w-100 text-start" id="tab-fav" data-bs-toggle="pill"
                    type="button" role="tab" aria-controls="pills-profile" aria-selected="false" data-id="-1"
                    onclick="CardsAjax(-1)">
                    <span class="fs-6 tab-text text-nowrap px-2">Favourite Item</span>
                </button>
            </li>

            <li class="nav-item mb-2 my-md-0" role="presentation">
                <button class="btn-category nav-link active p-2 w-100 text-start" id="tab-all" data-bs-toggle="pill"
                    type="button" role="tab" aria-controls="pills-profile" aria-selected="false" data-id="0"
                    onclick="CardsAjax(0)">
                    <span class="fs-6 tab-text text-nowrap px-2">All</span>
                </button>
            </li>

            @foreach (CategoryViewModel? category in Model.Categories)
            {
                <li class="nav-item mb-2 my-md-0" role="presentation">
                    <button class="btn-category nav-link p-2 w-100 text-start" id="tab-@category.Id" data-bs-toggle="pill"
                        type="button" role="tab" aria-controls="pills-profile" aria-selected="false" data-id="@category.Id"
                        onclick="CardsAjax(@category.Id)">
                        <span class="fs-6 tab-text text-nowrap px-2">@category.Name</span>
                    </button>
                </li>
            }

        </ul>
    </div>
    <!-- Categories heading tab ends-->
</div>
<!-- Sidebar ends-->

<!-- Main content starts-->
<div class="menu-main-content p-3">
    <div class="row mx-0">

        <!-- Menu -->
        <div class="col-12 @(Model.CustomerId == 0 ? "col-lg-12": "col-lg-7")">
            <!-- Search Box and Item Type Symbol starts-->
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-center gap-2 mb-3">

                <div class="input-group search-group">
                    <input type="search" class="form-control" placeholder="Search" name="search" id="searchQuery">
                    <button type="submit" class="input-group-text">
                        <img src="~/images/icons/search.svg" alt="">
                    </button>
                </div>

                <div class="d-flex justify-content-center gap-2">
                    <div class="text-nowrap">
                        <i class="bi bi-circle-fill text-success"></i>
                        <span>Vegetarian</span>
                    </div>
                    <div class="text-nowrap">
                        <i class="bi bi-circle-fill text-danger"></i>
                        <span>Non-Vegetarian</span>
                    </div>
                    <div class="text-nowrap">
                        <i class="bi bi-circle-fill text-warning"></i>
                        <span>Vegan</span>
                    </div>
                </div>
            </div>
            <!-- Search Box and Item Type Symbol ends-->

            <div class="d-flex flex-wrap gap-3" id="itemCards">
                <!-- Cards Partial View -->
            </div>
        </div>

        <!-- Order -->
        <div class="col-12 @(Model.CustomerId == 0 ? "d-none": "col-lg-5") flex-grow-1">
            <div class="bg-white p-2 px-3 border rounded-2 shadow-sm">

                <!-- Title starts-->
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="d-flex align-items-center gap-2">
                        <img src="/images/icons/dining-table.svg" alt="" class="bg-blue" height="40px" width="40px">
                        <div>
                            <div>@Model.SectionName</div>
                            <div>
                                <span class="fw-semibold">Table:</span>
                                <span>
                                    @foreach (string? table in Model.Tables)
                                    {
                                        <span>@table </span>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex gap-2">
                        <img src="/images/icons/qr-code-scan.svg" alt="" class="blue p-2 border rounded-1"
                            data-bs-toggle="modal" data-bs-target="#qr-scan-modal">
                        <img src="/images/icons/person-lines-fill.svg" alt="" class="blue p-2 border rounded-1"
                            onclick="CustomerDetail(@Model.CustomerId)">
                        <img src="/images/icons/chat-left-text.svg" alt="" class="blue p-2 border rounded-1"
                            onclick="OrderInstruction()">
                    </div>
                </div>
                <!-- Title ends-->

                <!-- Order Item starts -->
                <div class="table-responsive ">
                    <table class="table mb-1">
                        <thead>
                            <tr>
                                <th scope="col" class="col-6 fs-5">Item</th>
                                <th scope="col" class="col fs-5">Quantity</th>
                                <th scope="col" class="col fs-5">Amount</th>
                                <th scope="col" class="col-1"></th>
                            </tr>
                        </thead>
                        <tbody id="item-list">

                            @foreach (OrderItemViewModel? item in Model.Order.ItemsList)
                            {
                                <partial name="_ItemPartialView" model="item" />
                            }

                        </tbody>
                    </table>
                    <div>
                        <span class="text-light-blue">Instruction: </span>
                        <span id="orderInstruction">@Model.Order.Comment</span>
                    </div>
                </div>
                <!-- Order Item ends -->

                <div class="table-responsive">
                    <table class="table table-borderless menu-tax-table ">
                        <tr>
                            <td class="text-start fs-5">Subtotal</td>
                            <td class="text-end fs-5">
                                <span>₹</span>
                                <span id="orderSubTotal">@Model.Order.Subtotal</span>
                            </td>
                        </tr>

                        @foreach (Taxis? tax in Model.Taxes.Where(t => t.IsEnabled).OrderByDescending(t =>
                                                t.DefaultTax))
                        {
                            <tr>
                                <td class="text-start">
                                    @if (!tax.DefaultTax)
                                    {
                                        <input type="checkbox" class="form-check-input me-2 tax-cb" id="tax-cb-@tax.Id"
                                            onchange="CalculateBill()">
                                    }
                                    @tax.Name
                                </td>
                                <td class="text-end">
                                    <span>₹</span>
                                    <span class="taxValue" data-id="@tax.Id" data-value="@tax.TaxValue"
                                        data-ispercent="@tax.IsPercentage" data-taxdefault="@tax.DefaultTax">
                                        @Model.Order.TaxList.Where(t => t.TaxId == tax.Id).Select(t =>
                                        t.TaxValue).FirstOrDefault()
                                </span>
                            </td>
                        </tr>
                                                }

                        <tr>
                            <td class="text-start fs-5">Total</td>
                            <td class="text-end fs-5" id="">
                                <span>₹</span>
                                <span id="orderTotal">@Model.Order.FinalAmount</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-start">Payment Method</td>
                            <td class="text-end d-flex justify-content-end flex-wrap gap-3">
                                @foreach (var method in Model.PaymentMethods)
                                {
                                    <div class="form-check">
                                        <input type="radio" class="form-check-input" id="radio-@method.Id" name="optradio"
                                            value="@method.Id" checked>@method.Name
                                        <label class="form-check-label" for="radio1"></label>
                                    </div>
                                }
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="menu-order-bottom d-flex justify-content-end gap-2 mb-2 flex-wrap">
                    <button class="btn btn-blue ">
                        Save
                    </button>
                    <button class="btn btn-white ">
                        Complete
                    </button>
                    <button class="btn btn-white text-nowrap">
                        Generate Invoice
                    </button>
                </div>

                <div class="menu-order-bottom d-flex justify-content-end">
                    <button class="btn btn-white ">
                        Cancel
                    </button>
                </div>


            </div>
        </div>

    </div>

</div>
<!-- Main Content ends -->


<!-- #region Modals---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------->

<!-- Modal Item Detail starts -->
<div class="modal fade" id="itemDetail" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content" id="itemDetailContent">
            <!-- Item Detail Partial View -->
        </div>
    </div>
</div>
<!-- Modal Item Detail ends -->

<!-- Modal QR Scan starts-->
<div class="modal fade" id="qr-scan-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Menu</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <img src="/images/qr-code.png" alt="" height="250px" width="250px">
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" class="btn btn-white" data-bs-dismiss="modal">Done</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal QR Scan ends-->

<!-- Modal Customer Detail starts -->
<div class="modal fade" id="customer-detail-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" id="customer-detail-content">
            <!-- Customer Detail Partial View -->
        </div>
    </div>
</div>
<!-- Modal Customer Detail ends -->

<!-- Modal Order Comment starts-->
<div class="modal fade" id="order-instruction-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Order Wise Comment</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-floating">
                    <textarea class="form-control" rows="4" placeholder=""
                        id="orderInstructionModal"></textarea>
                    <label for="orderInstructionModal">Comments*</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-blue" id="saveOrderInstruction"
                    onclick="SaveOrderInstruction()">Save</button>
                <button type="reset" class="btn btn-white">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal Order Comment ends-->

<!-- Modal Item Instruction starts-->
<div class="modal fade" id="item-instruction-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Special Instruction</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-floating">
                    <textarea class="form-control" rows="4" placeholder="" id="itemInstruction"></textarea>
                    <label for="itemInstruction">Instruction*</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-blue" id="saveItemInstruction"
                    onclick="SaveItemInstruction()">Save</button>
                <button type="reset" class="btn btn-white">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal Item Instruction ends-->

<!-- #endregion ----------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------->

@section Scripts {

    @* Document Ready *@
    <script>
        $(document).ready(function () {
            CardsAjax(0);
        });
    </script>

    @* Cards ajax *@
    <script>

        let activeCategory = 0;

        $(document).on("input", "#searchQuery", function () {
            CardsAjax(activeCategory);
        });

        function CardsAjax(categoryId) {
            activeCategory = categoryId;
            $.ajax({
                url: '@Url.Action("GetCards", "AppMenu")',
                type: "GET",
                data: {
                    categoryId: categoryId,
                    search: $("#searchQuery").val()
                },
                dataType: "html",
                success: function (data) {
                    $("#itemCards").html(data);
                },
                error: function (data) {
                    alert("No Card Found");
                }
            });
        }
    </script>

    @* Favourite Item *@
    <script>

        function FavItem(itemId) {
            console.log("FavItem", itemId);
            $.ajax({
                url: '@Url.Action("FavouriteItem", "AppMenu")',
                data: {
                    itemId: itemId
                },
                type: "POST",
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        CardsAjax(activeCategory);
                    }
                    else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    alert("Not Done");
                }

            })
        }

    </script>

    @* Customer Detail Modal *@
    <script>

        function CustomerDetail(id) {
            $.ajax({
                url: '@Url.Action("GetById", "Customers")',
                type: "GET",
                data: {
                    id: id
                },
                dataType: "html",
                success: function (data) {
                    $("#customer-detail-modal").modal("show");
                    $("#customer-detail-content").html(data);
                },
                error: function (data) {
                    alert("No Item Found");
                }
            });
        }
    </script>

    @* Update Customer Detail Form Submit *@
    <script>
        $(document).on("submit", "#customerForm", function (e) {
            e.preventDefault();

            $.ajax({
                url: $(this).attr("action"),
                type: $(this).attr("method"),
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        $("#customer-detail-modal").modal("hide");
                        toastr.success(response.message);
                    }
                    else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    console.log("There is error.Not successful");
                }
            });
        });
    </script>

    @* Item Detail Modal *@
    <script>
        let currentItemId = 0;
        let currentItemName = "";
        let currentItemPrice = 0;
        let modifierList = [];

        let item = {
            Id: currentItemId,
            Name: currentItemName,
            Price: currentItemPrice,
            ModifiersList: modifierList
        }

        function ItemDetail(tag) {
            currentItemId = $(tag).data("id");
            currentItemName = $(tag).data("name");
            currentItemPrice = $(tag).data("price");
            modifierList = [];

            item = {
                Id: currentItemId,
                Name: currentItemName,
                Price: currentItemPrice,
                ModifiersList: modifierList
            }

            $.ajax({
                url: '@Url.Action("ItemDetail", "AppMenu")',
                type: "GET",
                data: {
                    itemId: currentItemId
                },
                dataType: "html",
                success: function (data) {
                    $("#itemDetail").modal("show");
                    $("#itemDetailContent").html(data);
                },
                error: function (data) {
                    alert("No Item Found");
                }
            });
        }

        @* Select Modifier *@
            function SelectModifier(tag) {
                let modifierId = $(tag).data("id");
                let modifierName = $(tag).data("name");
                let modifierPrice = $(tag).data("price");

                $(tag).toggleClass("modifier-card-selected");

                if (!modifierList.some(m => m.Id == modifierId)) {
                    modifierList.push({
                        Id: modifierId,
                        Name: modifierName,
                        Rate: modifierPrice
                    });
                }
                else {
                    modifierList = modifierList.filter(m => m.Id != modifierId);
                }

                @* item.ModifiersList = modifierList; *@
                    @* console.log(item); *@
                                            }

    </script>

    @* Instruction Modal *@
    <script>
        let instructionItemId = 0;

        function ItemInstruction(itemId) {
            instructionItemId = itemId;
            $("#itemInstruction").val($("#itemInstruction-" + itemId).text());
            $("#item-instruction-modal").modal("show");
        }

        function SaveItemInstruction() {
            $("#itemInstruction-" + instructionItemId).text($("#itemInstruction").val());
            $("#item-instruction-modal").modal("hide");
        }

        function OrderInstruction() {
            $("#orderInstructionModal").val($("#orderInstruction").text());
            $("#order-instruction-modal").modal("show");
        }

        function SaveOrderInstruction() {
            $("#orderInstruction").text($("#orderInstructionModal").val());
            $("#order-instruction-modal").modal("hide");
        }

    </script>

    @* Add and Delete Item *@
    <script>
        function AddItem() {
            @* console.log("AddItem : Item is ", item); *@
                $.ajax({
                    url: '@Url.Action("AddItem", "AppMenu")',
                    type: "POST",
                    data: {
                        item: item
                    },
                    dataType: "html",
                    success: function (data) {
                        $("#itemDetail").modal("hide");
                        $("#item-list").append(data);
                        CalculateBill();
                    }

                });
        }

        function RemoveItem(itemId) {
            $("tr").remove(".selectedItem[data-id ='" + itemId + "']");
            CalculateBill();
        }

    </script>

    @* Change Quantity of Selected Item in Order *@
    <script>
        function ChangeQuantity(tag, num) {
            let itemId = $(tag).data("id");
            let quantity = parseFloat($(tag).parent().children("input").val());
            if (quantity + num > 0) {
                quantity = quantity + num;
                $(tag).parent().children("input").val(quantity);
            }

            let itemRow = $(tag).closest(".selectedItem");

            let itemRate = itemRow.find(".itemSum").data("rate");
            $(itemRow).find(".itemSum").text((itemRate * quantity).toFixed(2));

            let modifierRate = itemRow.find(".modifierSum").data("rate");
            $(itemRow).find(".modifierSum").text((modifierRate * quantity).toFixed(2));

            CalculateBill();
        }
    </script>

    @* Update Total Amount and Taxes *@
    <script>

        function CalculateBill() {
            let subtotal = 0;

            $(".itemSum").each(function () {
                subtotal += parseFloat($(this).text());
            });

            $(".modifierSum").each(function () {
                subtotal += parseFloat($(this).text());
            });

            $("#orderSubTotal").text(subtotal);

            let totalTax = 0;
            $(".taxValue").each(function () {
                let taxId = $(this).data("id");
                let taxValue = parseFloat($(this).data("value"));
                let ispercent = $(this).data("ispercent") == "True";
                let defaultTax = $(this).data("taxdefault") == "True";
                let taxOnItem = 0;

                if (defaultTax || $("#tax-cb-" + taxId).prop("checked")) {
                    if (ispercent) {
                        taxOnItem = (subtotal * taxValue / 100)
                        $(this).text(taxOnItem);
                        totalTax += taxOnItem;
                    }
                    else {
                        taxOnItem = taxValue;
                        $(this).text(taxOnItem);
                        totalTax += taxOnItem;
                    }
                }
                else {
                    taxOnItem = 0;
                    $(this).text(taxOnItem);
                }

            });

            $("#orderTotal").text(subtotal + totalTax);

        }

    </script>





}